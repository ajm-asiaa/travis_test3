language: node_js
os: osx
compiler: clang
osx_image: xcode10.1
python:
- 2.7
node_js:
- '8'
cache:
  directories:
  - "$HOME/casacore"
  - "$HOME/measures_data"
  - "$HOME/package"
  - "$HOME/carta-frontend-built"
  - "$HOME/emsdk"
before_install:
- ls /usr/local/include/
- brew update > /dev/null
- brew install gcc || brew link --overwrite gcc
- brew link gcc
- which gfortran
- brew install tbb fmt protobuf cfitsio wcslib fftw hdf5
env:
  secure: "5vRh6gJW3iatpfTRJXtNX/zeRgYL8TPtCvCWg3rinTkYuXfZARyJTjx9aFqAuiUQLfvu9gNamVHMkDK9C7slhpUDOrwVGoo5uycPuDmLB2j411xvszJoOoTZAc7WPkfM4XAPBBfxVeqiHYWfM6NGWPFztMEk6wPQoVL5o0XmXSjl3+TzkXQS5vwCq3tVnQeYhHRny3dKPEcwt72YIcb5Pg3Q9PSfxN6kW7G7oDAwKGdcchrAeVnBIqXs7uzWmKilMtyOdi7sDfgfVGrlL3YRRZiP5uTt2NT16nGWpCvQL/OEUgWzsURtaY/AubjplumznJJbG8qgYje1FuihpcW/X0vwUBxqh/BJ61vK1r0ABTb3EMwFdgkh7yTUXZPnrHa4GscFfpBxVTQySEu9911g1EAGk09AR1KwyByKINav9Am3//fBR5WjA/I+mEzUiBW8+DI2SzIvNQGTY1zxzp+8Lpz3lAZVLwQq8BsaxolkQ8w5quQa7Uew7Lc/PFy7MFStD2ee1KzB3tmgnnd0tR5aIBqDLreMvycyAr9PH41/sFcIzGwELoXUAoruzB1QEKQTRaA31+B/3+H10eKcEgBZBS0XYZ7jY13ZqeRcvwkidPESJgYG+Fui2InTLgAzOVzyWcUkeHsBppqqGePDmsAqftVlNjF/e3PtD/xR7p3AIao="

  secure: "teC1+u23+tKtc6fytDCbmSMrefgjOfblHIu4eKjc7KBzsen4MVORm1MePZdRPj0vd9LTaJNN1pk85Hl9hp0Nps0iNcgaeG8bjfSai84rQgGVQQcfWNy3GgIV/cL/vNVEqjnUy8uNq0cWIRhsMHCMVOB5dK453rjpcw6n7OrKiCRibxRNMNa8MF1NLEIov0Hs+mvODL0BEZyWmgtVdVe6bvARRSEg6C0K2/8i2m/++Qz3RludUyC0Zv/b5mHWxO/ceg7gyqqJFj46woVQnVXySmai5WK8yqAg8+67t+dZcwtkjSXVPnoBqdtOgvp2YvQ8dHBES0rlzoLy06pZ86raFqBUImejz5ymUlWXBVPf4dCo/yVhSPKvxFVnNwjNm+ZUKC8VDtO4rYxOXb1Iy9QN2ExRJpjGiz3zXEKRcwqE+0TcStRpfe8up5fRews8AXj8Cw+nu4/IYNh49TsfmyGjbXMRFkIxRKDkyGEL1GK/ueMVtxjzf1DD7ER62LGtUzYnAObHH6XLYc+UtbTMMmuT/iJ9W17l8/wkVlkAH4gEwwdnjlkUa8ZVb3X33oaiHkkknRR7T2mhjGjshsBDcQIXKUwyDFd3EiyIObbDzu+EGQOJiPEvxFJEBkXf3535qP54mieD/vCK+LDk42ZVC207Vcz8N5JBDZIm3xDKjEuhtfc="

  secure: "pE3btK3h+zKWH6kJCkRSCBxuA87QQ3UKSM2U9rF/hEsB123Swq0+4bPqWFPAyXqikOn45MTdnZrf0NiUw2+FUhW6BTGylAS7ZZo9e4K8I82BXcuRUHbOdwqOr3zXe64H0+qeBspchxELWdlUV0SF8OBjfwNok/xZpYZKdh/cWwIVxES7rNHqxeRJ9Y/Si+7kSMjQiboxD7w/b0ZNqfU+tCUi6IJW9gMmIO11ierYBF7sq7CYpbZe99caqlt+dkVFRYfwNbwIwkMCTw/jsoZ0PJBcsAQqrQULXIgO9kccCegkoq2O1vyKWfKtvTjIXT8irCZMEHm2o0h983tUlO1uhPGqIWZo5/mFmwpivbxxGkjDt6OTtKPmNEu+xY3gya4AKOzb3mEmtKKn7bKqPAi/ErBvbFHn8u7aSJg36W3LlTBzr9koE0kTI+bxvWz2Yd/M+c10sbbse2oQfEwnRzfMbfo+Lpl+AYmEWBMNOq4SeuibXvgEiVRtmaCMKKXDXSZ3dbXAcw/dp3/WGuI3j/O85ei4ZjimMKxoyzVxZtyCuudfxBwjhnQs1jdrl4DmhreuP+YPLm9q5k7hnQvo8V/z9LySMNFkL/MaTGRk+OJpsuBPWFIDMIPAssH8xgE5MeR3OuxjwUGGnSrrtTNtsDAX8O+L8psoAz3fqrljH6G/zUU="

  secure: "5oYkaGGktWA5l3m7gyraGPL90SEyMEPjjHW/xPS3IW6f1laCxIqGfvl+heYzG3hWt+xPLVj30eWy3li+ZEzJNF5XAn2DCBSdL0iybfqNKzREj/SLZpN4buTxx6Yi7yAAtewpwjj9Lnr8M8ruqWoqFht5oDR5BWV3F75WzuNm0ut1HxjX3fH7XZkjPmO/aASeJ5peiFAwa97wX/64zZSa+9bSO0enxO5djcBoC5A6pKN/vAOroc+Nicskrrc5BLRGR2OuEMUmktlo7djZEIOoTiP78g3kyef0WWOaEbnhIZ2JDeluCh3KL9bmER02Re/hXzRkbER6ueutJblivoLNAWcFe66TOFeS4vgDg0VD2Du4JPeYxJrwx0ZRJkxtGwXQsOxz/lpuiRy0noJ7ZX9tywmbOVSLuD3Kcfwsacs6tZGzNtNnQrirTho5dKu/f2ieVvevu2Pmzp6L3y2phdVxbhMtZMvBxdYP/sbcI3ohMqj/CeeZPRBAvSfCwKnnAVlFb1FqU52fKCzz4xES2v2cqg9sQSOwC5XzpY6FiGVtJayoYkRaObSakNYC8EHiIj0U47QBzGj/j6m3ANJ+9LFI533YkipGY0xZa5mGIdD9y8VTDeNtfRo3DwG7kqaoES6j+uOzWKOXjHq+72hOiYRIDstyXpPQhL6PzviOxXsgjrc="

  secure: "zGG+nzMltSs3k56NoGDFqF4t7aH6y9A6Q+fePt/3SML5WIA4jhsEhjJEq00rN3cFe3Npru829CNPRioTtTqiMMKkdV3OlMkrlN/pFpADAzlMWt5CmgGM0G5jXgdL8hjgs3qyCKs7Xd58OQAdxbrVmb0wUBmR3t/blYkv7A8rwvrhiG+ZVDO9lRyV9mVEUNf6ZOGrKw8ywtf/SpG9zq3pdPzFXazBz3k8QgHbDR4pfSnmDMOFjnKN2aGulV5iE70VPbV2j/ZgIgFwvm4170FE/R5HGMh+IADDZyhJ7NNh9qUkr/qXnq30fKVdX4hoiu6kWULuntINsYQGk37I7y6ndM7rUYAOumFYNYzd2n1S72tiajDDqEkCR1EdHc0UTTTbLG0fYxDY7GnluZUhuLGmtMofYaGOlcrPmRPsrqiD/00SqSwZ/iGdqlTwtegR6ghLJg1OU2YUVBrWEfvdHVU7EAYpjFjXJlexqoWIeVAowfxhrN37W+f9nYovEpUtJyy+XzCMOFb7zxVpjiZx3HyXqUaM3rIgZBnieYQKtvIbdxMCBZL4iIT6e1TrFnOkQbHG8vzCa2FaC0OBcCedEas4c/IIfEs23PTHRfhvmPkR6w0gHHdZEtizwJGSp3J6pv1hnHjYOq/8xEpe1psCDbCUn7I8QIAJZWktfLHV+vgGnPU="


global:
- CI_NODE_TOTAL=2
jobs:
  include:
  - stage: build casacore
    install: true
    script:
    - ls /usr/local/opt/openssl/
    - cd $HOME
    - ls
    - ls $HOME/casacore/
    - if [ -e "$HOME/casacore/lib" ]; then echo "casacore cache exists"; else echo
      "building casacore" && $TRAVIS_BUILD_DIR/scripts/ci_mac_casacore.sh; fi
  - stage: build carta-backend
    install: true
    script:
    - sudo cp -r $HOME/casacore/lib/* /usr/local/lib/
    - sudo cp -r $HOME/casacore/include/casacore /usr/local/include/
    - cd $HOME
    - git clone https://github.com/libuv/libuv.git
    - cd libuv
    - sh autogen.sh
    - "./configure"
    - make -j 2
    - sudo make install
    - cd ..
    - git clone https://github.com/uNetworking/uWebSockets.git
    - cd uWebsockets
    - git checkout c7aa984
    - make
    - sudo make install
    - cd ..
    - git clone https://github.com/LLNL/zfp.git
    - cd zfp && mkdir build && cd build
    - cmake ..
    - make
    - sudo make install
    - cd ../..
    - echo "Building carta-backend"
    - cd $TRAVIS_BUILD_DIR
    - git submodule init && git submodule update
    - mkdir build && cd build
    - cmake -DCMAKE_CXX_FLAGS="-I /usr/local/opt/openssl/include" -DCMAKE_CXX_STANDARD_LIBRARIES="-L
      /usr/local/Cellar/fmt/5.1.0/lib -L /usr/local/Cellar/hdf5/1.10.4/lib -L /usr/local/lib
      -L /usr/local/opt/openssl/lib" ..
    - make
    - ls -sort
    - otool -L carta_backend
    - echo "Package carta-backend"
    - git clone https://github.com/auriamg/macdylibbundler.git
    - cd macdylibbundler
    - make
    - sudo make install
    - cd ..
    - mkdir -p package/bin && cd package/bin && cp ../../carta_backend .
    - cp $TRAVIS_BUILD_DIR/scripts/run.sh .
    - cp /usr/local/lib/libuWS.dylib .
    - otool -L carta_backend
    - sudo cp /usr/local/lib/libzfp.0.dylib /usr/local/opt/boost/lib/
    - dylibbundler -od -of -b -d ../libs -x carta_backend < $TRAVIS_BUILD_DIR/scripts/keyboard_input.txt
    - rm libuWS.dylib
    - otool -L carta_backend
    - cd .. && mkdir etc && cd etc
    - if [ -e "$HOME/measures_data/measures_data.tar.gz" ]; then echo "measures data
      cache exists"; else echo "downloading measures data" && curl -o $HOME/measures_data/measures_data.tar.gz  http://alma.asiaa.sinica.edu.tw/_downloads/measures_data.tar.gz;
      fi
    - cp $HOME/measures_data/measures_data.tar.gz .
    - tar -xvf measures_data.tar.gz
    - rm measures_data.tar.gz
    - mv measures_data data
    - cd ..
    - ls bin/
    - ls libs/
    - ls etc/
    - cd ..
    - rm -rf $HOME/package
    - cp -r package $HOME/
  - stage: create the complete package
    install: true
    script:
    - export TRAVIS_TAG="$(git rev-parse --short ${TRAVIS_COMMIT})"
    - echo "$TRAVIS_TAG"
    - cd $HOME
    - curl https://install.meteor.com | /bin/sh
    - export PATH=$HOME/.meteor:$PATH
    - rm -rf emsdk
    - git clone https://github.com/juj/emsdk.git
    - cd emsdk
    - git pull
    - "./emsdk install latest"
    - "./emsdk activate latest"
    - source ./emsdk_env.sh
    - npm install electron-packager -g
    - npm install electron-installer-dmg -g
    - cd $HOME
    - echo "Prepare the frontend"
    - git clone https://github.com/CARTAvis/carta-frontend.git
    - cd carta-frontend
    - git checkout
    - cp $TRAVIS_BUILD_DIR/scripts/tslint.json .
    - git submodule init
    - git submodule update
    - CI=false npm install
    - cd wasm_libs
    - "./build_libs.sh"
    - cd ..
    - cd wasm_src
    - "./build_wrappers.sh"
    - cd ..
    - cd protobuf
    - "./build_proto.sh"
    - cp $TRAVIS_BUILD_DIR/scripts/.env_local .
    - CI=false npm run build
    - cd build
    - wget http://alma.asiaa.sinica.edu.tw/_downloads/assets.tar.gz && tar -xvf assets.tar.gz
      && rm assets.tar.gz
    - cp $TRAVIS_BUILD_DIR/scripts/main.js .
    - cp $TRAVIS_BUILD_DIR/scripts/package.json .
    - cp -r $HOME/package .
    - ls -sort
    - mv package carta-backend
    - sed -i '' "s/XXXX/$TRAVIS_TAG/g" package.json
    - CI=false meteor npm install
    - electron-packager . --overwrite --platform=darwin --arch=x64 --icon=assets/icons/mac/icon.icns
      --prune=true --out=release-builds
    - brew install tree
    - tree release-builds
    - electron-installer-dmg --icon=assets/icons/mac/icon.icns release-builds/CARTA-$TRAVIS_TAG-darwin-x64/CARTA-$TRAVIS_TAG.app
      CARTA-$TRAVIS_TAG
    - ls -sort
    - export SSHPASS=$DEPLOY_PASS
    - brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb
    - export SSHPASS=$DEPLOY_PASS
    - ls -sort
    - sshpass -e scp -o stricthostkeychecking=no -P $DEPLOY_PORT main.js $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
    - echo "Finished !!"
